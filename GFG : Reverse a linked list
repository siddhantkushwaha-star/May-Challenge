GFG : Reverse a Linked List

Reverse a linked list
Difficulty: EasyAccuracy: 73.11%Submissions: 345K+Points: 2Average Time: 30m
Given the head of a linked list, the task is to reverse this list and return the reversed head.

Examples:

Input: head: 1 -> 2 -> 3 -> 4 -> NULL
Output: head: 4 -> 3 -> 2 -> 1 -> NULL
Explanation:

Input: head: 2 -> 7 -> 10 -> 9 -> 8 -> NULL
Output: head: 8 -> 9 -> 10 -> 7 -> 2 -> NULL
Explanation:

Input: head: 2 -> NULL
Output: 2 -> NULL
Explanation:

Constraints:
1 <= number of nodes, data of nodes <= 105


Solution : 

class Solution {
    Node reverseList(Node head) {
        // code here
         Node prev = null;
         Node curr = head;
         
         while( curr != null){
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
         }
         return prev;
    }
}
