LeetCode : 04 May : 1128 Number of Equivalent Domino Pairs


Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a == c and b == d), or (a == d and b == c) - that is, one domino can be rotated to be equal to another domino.

Return the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].

 

Example 1:

Input: dominoes = [[1,2],[2,1],[3,4],[5,6]]
Output: 1
Example 2:

Input: dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]
Output: 3

Solution : 

class Solution {
    public int numEquivDominoPairs(int[][] dominoes) {
    
    // Array le rahe hain jisme 0 se 99 tak index ho sakte hain
        // Kyunki domino key 2 digit ka hoga (1 to 9 ka combination)
        int[] freq = new int[100];

        int count = 0;

        // Har domino pe loop lagayenge
        for (int[] d : dominoes) {
            int a = d[0];
            int b = d[1];

            // Normalize karte hain: chhoti value pehle
            // [2,1] -> [1,2] banate hain
            int key = Math.min(a, b) * 10 + Math.max(a, b);

            // Agar pehle se ye domino aaya hai, to jitni baar aaya hai,
            // utne new pairs banenge
            count += freq[key];

            // Ab is domino ko record kar lo (count badhao)
            freq[key]++;
        }

        return count;
    }
}
